{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Email Challenge API",
    "description": "API to register a user, login a user, send an email to a user and get the statistics of the users and the emails sent. The API is secured with JWT. The API has two roles: user and admin. The user can register, login and send an email. The admin can get the statistics of the users and the emails sent "
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your bearer token in the format: Bearer {token}"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/user/register_user": {
      "post": {
        "description": "Endpoint to register a user or an admin. If no role is provided, the user will be registered as a normal user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User registration details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error"
          },
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/user/login_user": {
      "post": {
        "description": "Endpoint to login a user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User registration details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "401": {
            "description": "Invalid email or password"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/email/send_email": {
      "post": {
        "description": "Endpoint to send an email to a user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Email details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "receiverEmail": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email sent successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/admin/stats": {
      "get": {
        "description": "Endpoint to get the statistics of the users and the emails sent. Just admin can trigger this endpoint",
        "responses": {
          "200": {
            "description": "Stats retrieved successfully"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  }
}